<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docker-compose.dev.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docker-compose.dev.yml" />
              <option name="originalContent" value="# Dockerfile dla środowiska deweloperskiego z hot-reload&#10;&#10;FROM node:22-alpine&#10;&#10;WORKDIR /app&#10;&#10;# Instalacja zależności&#10;COPY package.json package-lock.json* ./&#10;RUN npm ci --prefer-offline --no-audit&#10;&#10;# Kopiowanie plików źródłowych&#10;COPY . .&#10;&#10;# Expose portu&#10;EXPOSE 5173&#10;&#10;# Zmienne środowiskowe dla dev&#10;ENV NODE_ENV=development&#10;&#10;# Uruchomienie w trybie dev z hot-reload&#10;CMD [&quot;npm&quot;, &quot;run&quot;, &quot;dev&quot;, &quot;--&quot;, &quot;--host&quot;, &quot;0.0.0.0&quot;]&#10;&#10;" />
              <option name="updatedContent" value="# Docker Compose dla środowiska deweloperskiego&#10;&#10;services:&#10;  frontend:&#10;    build:&#10;      context: ./frontend&#10;      dockerfile: Dockerfile.dev&#10;    container_name: spcloud_frontend_dev&#10;    restart: unless-stopped&#10;    ports:&#10;      - &quot;${FRONTEND_PORT:-5173}:5173&quot;&#10;    volumes:&#10;      - ./frontend:/app&#10;      - /app/node_modules&#10;    environment:&#10;      - NODE_ENV=development&#10;      - PUBLIC_API_URL=${PUBLIC_API_URL:-http://localhost:8000}&#10;    depends_on:&#10;      - backend&#10;    networks:&#10;      - spcloud_network&#10;&#10;  backend:&#10;    build:&#10;      context: ./backend&#10;    container_name: fastapi_backend&#10;    restart: unless-stopped&#10;    env_file: .env&#10;    ports:&#10;      - &quot;8000:8000&quot;&#10;    volumes:&#10;      - ./backend/app:/app&#10;    depends_on:&#10;      - db&#10;      - minio&#10;    networks:&#10;      - spcloud_network&#10;&#10;  minio:&#10;    image: minio/minio:latest&#10;    container_name: minio&#10;    command: server /data --console-address &quot;:9001&quot;&#10;    restart: unless-stopped&#10;    environment:&#10;      MINIO_ROOT_USER: admin&#10;      MINIO_ROOT_PASSWORD: supersecret&#10;    ports:&#10;      - &quot;9000:9000&quot;&#10;      - &quot;9001:9001&quot;&#10;    volumes:&#10;      - minio_data:/data&#10;    networks:&#10;      - spcloud_network&#10;&#10;  db:&#10;    image: postgres:18&#10;    container_name: postgres_db&#10;    restart: unless-stopped&#10;    env_file: .env&#10;    ports:&#10;      - &quot;${POSTGRES_PORT:-5432}:5432&quot;&#10;    volumes:&#10;      - db_data:/var/lib/postgresql/data&#10;    networks:&#10;      - spcloud_network&#10;&#10;volumes:&#10;  db_data:&#10;  minio_data:&#10;&#10;networks:&#10;  spcloud_network:&#10;    driver: bridge" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/Dockerfile.dev">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/Dockerfile.dev" />
              <option name="updatedContent" value="# Dockerfile dla środowiska deweloperskiego z hot-reload&#10;&#10;FROM node:22-alpine&#10;&#10;WORKDIR /app&#10;&#10;# Instalacja zależności&#10;COPY package.json package-lock.json* ./&#10;RUN npm ci --prefer-offline --no-audit&#10;&#10;# Kopiowanie plików źródłowych&#10;COPY . .&#10;&#10;# Expose portu&#10;EXPOSE 5173&#10;&#10;# Zmienne środowiskowe dla dev&#10;ENV NODE_ENV=development&#10;&#10;# Uruchomienie w trybie dev z hot-reload&#10;CMD [&quot;npm&quot;, &quot;run&quot;, &quot;dev&quot;, &quot;--&quot;, &quot;--host&quot;, &quot;0.0.0.0&quot;]&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/routes/dashboard/+page.svelte">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/routes/dashboard/+page.svelte" />
              <option name="originalContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    import feather from '$lib/assets/feather-sprite.svg';&#10;    import logoUrl from '$lib/assets/logo.svg';&#10;    import FuzzySearch from 'fuzzy-search';&#10;    import StorageProgress from '../../components/storage-progress.svelte';&#10;    import { onMount } from 'svelte';&#10;&#10;    type FileDesc = {&#10;        id: number;&#10;        name: string;&#10;        is_favorite: boolean;&#10;        date: Date;&#10;        size: number;&#10;    };&#10;&#10;    let activeNavLink = $state('my-files');&#10;    let search = $state('');&#10;    let isSortMenuOpen = $state(false);&#10;    let sortBy = $state('name');&#10;    let sortOrder = $state('asc');&#10;    let isDeleteConfirming = $state(false);&#10;&#10;    let indeterminateCheckbox: HTMLInputElement;&#10;&#10;    let selectedFileIds = $state&lt;number[]&gt;([]);&#10;    let result = $state&lt;FileDesc[]&gt;([]);&#10;    let files = $state&lt;FileDesc[]&gt;([]);&#10;&#10;    // Storage tracking&#10;    const MAX_STORAGE_MB = 100;&#10;    const usedStorageMB = $derived(files.reduce((sum, file) =&gt; sum + (file.size / (1024 * 1024)), 0));&#10;&#10;    const searcher = $derived(new FuzzySearch(Array.from(files), ['name'], {&#10;        caseSensitive: false&#10;    }));&#10;&#10;    const displayedFiles = $derived(files&#10;        .filter((file) =&gt; {&#10;            if (search.length &gt; 0) {&#10;                return result.some((res) =&gt; file.id === res.id);&#10;            }&#10;            if (activeNavLink === 'favorites') {&#10;                return file.is_favorite;&#10;            }&#10;            if (activeNavLink === 'recent') {&#10;                const now = Date.now();&#10;                const oneWeekInMs = 7 * 24 * 60 * 60 * 1000;&#10;                return file.date.getTime() &gt;= (now - oneWeekInMs);&#10;            }&#10;            return true;&#10;        })&#10;        .sort((a, b) =&gt; {&#10;            let comparison: number = 0;&#10;            if (sortBy === 'name') {&#10;                const nameA = a.name || '';&#10;                const nameB = b.name || '';&#10;                comparison = nameA.localeCompare(nameB, undefined, {numeric: true});&#10;            } else if (sortBy === 'date') {&#10;                comparison = a.date.getTime() - b.date.getTime();&#10;            } else if (sortBy === 'size') {&#10;                comparison = a.size - b.size;&#10;            }&#10;            return sortOrder === 'asc' ? comparison : -comparison;&#10;        }));&#10;&#10;    const areAllDisplayedSelected = $derived(&#10;        displayedFiles.length &gt; 0 &amp;&amp; selectedFileIds.length === displayedFiles.length&#10;    );&#10;    const areSomeDisplayedSelected = $derived(selectedFileIds.length &gt; 0 &amp;&amp; !areAllDisplayedSelected);&#10;&#10;    $effect(() =&gt; {&#10;        if (indeterminateCheckbox) {&#10;            indeterminateCheckbox.indeterminate = areSomeDisplayedSelected;&#10;        }&#10;    });&#10;&#10;    function handleSortChange(newSortBy: string, newSortOrder: string) {&#10;        sortBy = newSortBy;&#10;        sortOrder = newSortOrder;&#10;        isSortMenuOpen = false;&#10;    }&#10;&#10;    function toggleFavorite(fileId: number) {&#10;        const file = files.find((f) =&gt; f.id === fileId);&#10;        if (file) {&#10;            file.is_favorite = !file.is_favorite;&#10;            files = [...files];&#10;        }&#10;    }&#10;&#10;    function toggleSelectAll() {&#10;        if (areAllDisplayedSelected) {&#10;            selectedFileIds = [];&#10;        } else {&#10;            selectedFileIds = displayedFiles.map((f) =&gt; f.id);&#10;        }&#10;    }&#10;&#10;    function handleDownload() {&#10;        console.log('Pobieranie plików o ID:', selectedFileIds);&#10;&#10;        &#10;    }&#10;&#10;    function handleDelete() {&#10;        if (!isDeleteConfirming) {&#10;            isDeleteConfirming = true;&#10;            return;&#10;        }&#10;&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        if (!token) {&#10;            console.error('Brak tokena - przekierowanie na /login');&#10;            window.location.href = '/login';&#10;            return;&#10;        }&#10;&#10;        for (const fileId of selectedFileIds) {&#10;            fetch(`http://localhost:8000/api/v1/files/${fileId}`, {&#10;                method: 'DELETE',&#10;                headers: {&#10;                    'Authorization': `Bearer ${token}`,&#10;                },&#10;            }).then((response) =&gt; {&#10;                if (response.status === 401 || response.status === 403) {&#10;                    console.error('Token nieprawidłowy - przekierowanie na /login');&#10;                    window.localStorage.removeItem('token');&#10;                    window.location.href = '/login';&#10;                    return;&#10;                }&#10;&#10;                if (!response.ok) {&#10;                    return response.json();&#10;                }&#10;            }).then((data) =&gt; {&#10;                if (data) {&#10;                    console.error('Błąd podczas usuwania pliku:', data.detail || data);&#10;                }&#10;            }).catch((error) =&gt; {&#10;                console.error('Błąd podczas usuwania pliku:', error);&#10;            });&#10;        }&#10;&#10;        setTimeout(() =&gt; {&#10;            fetchFiles();&#10;            selectedFileIds = [];&#10;            isDeleteConfirming = false;&#10;        }, 500);&#10;    }&#10;&#10;    function cancelDelete() {&#10;        isDeleteConfirming = false;&#10;    }&#10;&#10;    function handleLogout() {&#10;        console.log('Wylogowywanie...');&#10;        window.localStorage.removeItem('token');&#10;        window.location.href = '/login';&#10;    }&#10;&#10;    function handleSearch() {&#10;        result = searcher.search(search);&#10;    }&#10;&#10;    function fetchFiles() {&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/files/&quot;, {&#10;            method: 'GET',&#10;            headers: {&#10;                'Authorization': `Bearer ${token}`,&#10;            },&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Failed to fetch files');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            console.log('Pobrano pliki:', data);&#10;&#10;            files = data.files.map((file: any) =&gt; ({&#10;                id: file.id,&#10;                name: file.name || 'Nieznany plik',&#10;                is_favorite: file.is_favorite || false,&#10;                date: new Date(file.updated_at.replace('Z', '')),&#10;                size: file.size || 0&#10;            }));&#10;        }).catch((error) =&gt; {&#10;            console.error('Błąd podczas pobierania plików:', error);&#10;        });&#10;    }&#10;&#10;    function handleFileUpload(event: Event) {&#10;        const input = event.target as HTMLInputElement;&#10;        const file = input.files?.[0];&#10;&#10;        if (!file) {&#10;            console.error('Nie wybrano pliku');&#10;            return;&#10;        }&#10;&#10;        const formData = new FormData();&#10;        formData.append('file', file);&#10;&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        if (!token) {&#10;            console.error('Brak tokena - przekierowanie na /login');&#10;            window.location.href = '/login';&#10;            return;&#10;        }&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/files/upload&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Authorization': `Bearer ${token}`,&#10;            },&#10;            body: formData,&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Upload failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            console.log('Plik przesłany pomyślnie:', data);&#10;            input.value = '';&#10;            // Odśwież listę plików po przesłaniu&#10;            fetchFiles();&#10;        }).catch((error) =&gt; {&#10;            console.error('Błąd podczas przesyłania pliku:', error);&#10;        });&#10;    }&#10;&#10;    onMount(() =&gt; {&#10;        fetchFiles();&#10;    });&#10;&#10;    function formatBytes(bytes: number, decimals = 2) {&#10;        if (bytes === 0) return '0 Bytes';&#10;        const k = 1024;&#10;        const dm = decimals &lt; 0 ? 0 : decimals;&#10;        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];&#10;&#10;        const i = Math.floor(Math.log(bytes) / Math.log(k));&#10;&#10;        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;background-container&quot;&gt;&#10;    &lt;div class=&quot;dashboard-panel&quot;&gt;&#10;        &lt;nav class=&quot;sidebar&quot;&gt;&#10;            &lt;div&gt;&#10;                &lt;div class=&quot;logo&quot;&gt;&#10;                    &lt;img alt=&quot;Logo&quot; height=&quot;32&quot; src={logoUrl} width=&quot;32&quot;/&gt;&#10;                    &lt;span class=&quot;logo-text&quot;&gt;SPCloud&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;ul class=&quot;nav-links&quot;&gt;&#10;                    &lt;li class:active={activeNavLink === 'my-files'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'my-files')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#hard-drive&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Moje pliki&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                    &lt;li class:active={activeNavLink === 'favorites'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'favorites')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#star&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Ulubione&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                    &lt;li class:active={activeNavLink === 'recent'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'recent')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#clock&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Najnowsze&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;                &lt;StorageProgress usedStorage={usedStorageMB} maxStorage={MAX_STORAGE_MB}/&gt;&#10;                &lt;div class=&quot;upload&quot;&gt;&#10;                    &lt;svg class=&quot;feather&quot;&gt;&#10;                        &lt;use href=&quot;{feather}#upload-cloud&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;label for=&quot;upload&quot; class=&quot;link-text&quot;&gt;Prześlij plik&lt;/label&gt;&#10;                    &lt;input type=&quot;file&quot; id=&quot;upload&quot; onchange={handleFileUpload}/&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/nav&gt;&#10;&#10;        &lt;div class=&quot;main-content&quot;&gt;&#10;            &lt;header class=&quot;top-bar&quot;&gt;&#10;                &lt;div class=&quot;search-bar&quot;&gt;&#10;                    &lt;svg class=&quot;feather search-icon&quot;&gt;&#10;                        &lt;use href=&quot;{feather}#search&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;input placeholder=&quot;Search&quot; type=&quot;text&quot; bind:value={search} oninput={handleSearch}/&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;top-bar-actions&quot;&gt;&#10;                    &lt;div class=&quot;sort-menu&quot;&gt;&#10;                        &lt;button class=&quot;sort-button&quot; onclick={() =&gt; (isSortMenuOpen = !isSortMenuOpen)}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#sliders&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span&gt;Sortuj&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;&#10;                        {#if isSortMenuOpen}&#10;                            &lt;ul class=&quot;sort-dropdown&quot;&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('name', 'asc')}&#10;                                    &gt;&#10;                                        Nazwa&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'name' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('name', 'desc')}&#10;                                    &gt;&#10;                                        Nazwa&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'name' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('date', 'asc')}&#10;                                    &gt;&#10;                                        Data&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'date' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('date', 'desc')}&#10;                                    &gt;&#10;                                        Data&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'date' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('size', 'asc')}&#10;                                    &gt;&#10;                                        Rozmiar&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'size' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('size', 'desc')}&#10;                                    &gt;&#10;                                        Rozmiar&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'size' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        {/if}&#10;                    &lt;/div&gt;&#10;                    &lt;button class=&quot;logout-button&quot; onclick={handleLogout} title=&quot;Wyloguj się&quot;&gt;&#10;                        &lt;svg class=&quot;feather&quot;&gt;&#10;                            &lt;use href=&quot;{feather}#log-out&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;main class=&quot;file-list-container&quot;&gt;&#10;                &lt;div class=&quot;file-list-header&quot;&gt;&#10;                    &lt;div class=&quot;header-left&quot;&gt;&#10;                        &lt;input&#10;                                type=&quot;checkbox&quot;&#10;                                class=&quot;input-checkbox&quot;&#10;                                onclick={toggleSelectAll}&#10;                                checked={areAllDisplayedSelected}&#10;                                bind:this={indeterminateCheckbox}&#10;                        /&gt;&#10;                        &lt;h2&gt;Lista plików&lt;/h2&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;header-right&quot;&gt;&#10;                        &lt;div class=&quot;header-columns&quot;&gt;&#10;                            &lt;span class=&quot;header-date&quot;&gt;Data modyfikacji&lt;/span&gt;&#10;                            &lt;span class=&quot;header-size&quot;&gt;Rozmiar&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;ul class=&quot;file-list&quot;&gt;&#10;                    {#each displayedFiles as file (file.id)}&#10;                        &lt;li class=&quot;file-item&quot;&gt;&#10;                            &lt;input&#10;                                    type=&quot;checkbox&quot;&#10;                                    bind:group={selectedFileIds}&#10;                                    value={file.id}&#10;                                    name={file.id.toString()}&#10;                                    id={file.id.toString()}&#10;                                    class=&quot;input-checkbox&quot;&#10;                            /&gt;&#10;                            &lt;button&#10;                                    aria-label=&quot;favorite button&quot;&#10;                                    class=&quot;favorite-btn&quot;&#10;                                    class:favorited={file.is_favorite}&#10;                                    onclick={() =&gt; toggleFavorite(file.id)}&#10;                            &gt;&#10;                                &lt;svg class=&quot;feather star-icon&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#star&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                            &lt;svg class=&quot;feather file&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#file&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;file-name&quot;&gt;{file.name}&lt;/span&gt;&#10;                            &lt;span class=&quot;file-date&quot;&gt;{file.date.toLocaleDateString('pl-PL', {&#10;                                year: 'numeric',&#10;                                month: '2-digit',&#10;                                day: '2-digit',&#10;                                hour: '2-digit',&#10;                                minute: '2-digit'&#10;                            })}&lt;/span&gt;&#10;                            &lt;span class=&quot;file-size&quot;&gt;{formatBytes(file.size)}&lt;/span&gt;&#10;                        &lt;/li&gt;&#10;                    {/each}&#10;                &lt;/ul&gt;&#10;            &lt;/main&gt;&#10;&#10;            {#if selectedFileIds.length &gt; 0}&#10;                &lt;div class=&quot;download-bar&quot;&gt;&#10;                    &lt;button class=&quot;download-button&quot; onclick={handleDownload}&gt;&#10;                        &lt;svg class=&quot;feather&quot;&gt;&#10;                            &lt;use href=&quot;{feather}#download&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        {#if selectedFileIds.length === 1}&#10;                            Pobierz&#10;                        {:else}&#10;                            Pobierz wiele plików&#10;                        {/if}&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;delete-bar&quot;&gt;&#10;                    {#if !isDeleteConfirming}&#10;                        &lt;button class=&quot;delete-button&quot; onclick={handleDelete}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#trash-2&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/button&gt;&#10;                    {:else}&#10;                        &lt;div class=&quot;delete-confirm&quot;&gt;&#10;                            &lt;span class=&quot;delete-text&quot;&gt;Czy na pewno?&lt;/span&gt;&#10;                            &lt;button class=&quot;confirm-yes&quot; onclick={handleDelete} title=&quot;Tak, usuń&quot;&gt;&#10;                                &lt;svg class=&quot;feather&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                            &lt;button class=&quot;confirm-no&quot; onclick={cancelDelete} title=&quot;Nie, anuluj&quot;&gt;&#10;                                &lt;svg class=&quot;feather&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#x&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    {/if}&#10;                &lt;/div&gt;&#10;            {/if}&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    * {&#10;        margin: 0;&#10;        padding: 0;&#10;        box-sizing: border-box;&#10;        color: var(--text-primary);&#10;    }&#10;&#10;    .feather {&#10;        width: 24px;&#10;        height: 24px;&#10;        stroke: var(--text-primary);&#10;        stroke-width: 2;&#10;        stroke-linecap: round;&#10;        stroke-linejoin: round;&#10;        fill: none;&#10;    }&#10;&#10;    input[type='file'] {&#10;        display: none;&#10;    }&#10;&#10;    .upload {&#10;        cursor: pointer;&#10;    }&#10;&#10;    .feather.file {&#10;        margin-right: 8px;&#10;    }&#10;&#10;    :global(body) {&#10;        font-family: var(--font-family), sans-serif;&#10;        overflow: hidden;&#10;    }&#10;&#10;    .background-container {&#10;        width: 100vw;&#10;        height: 100vh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        padding: 40px;&#10;    }&#10;&#10;    .upload {&#10;        width: 100%;&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 16px;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        text-decoration: none;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        transition: all 0.2s ease;&#10;        background-color: transparent;&#10;        border: none;&#10;        cursor: pointer;&#10;    }&#10;&#10;    .upload label {&#10;        cursor: pointer;&#10;    }&#10;&#10;    .upload:hover {&#10;        background-color: var(--hover-bg);&#10;        color: #fff;&#10;    }&#10;&#10;    .upload:hover svg {&#10;        color: #fff;&#10;    }&#10;&#10;    .sort-menu {&#10;        position: relative;&#10;    }&#10;&#10;    .sort-dropdown {&#10;        position: absolute;&#10;        top: calc(100% + 8px);&#10;        right: 0;&#10;        background-color: var(--dropdown-bg);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        list-style: none;&#10;        padding: 8px;&#10;        width: 200px;&#10;        z-index: 1000;&#10;        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);&#10;    }&#10;&#10;    .sort-btn {&#10;        all: unset;&#10;        display: flex;&#10;        align-items: center;&#10;        cursor: pointer;&#10;        width: 100%;&#10;    }&#10;&#10;    .sort-arrow {&#10;        width: 16px;&#10;        height: 16px;&#10;        margin-left: 6px;&#10;    }&#10;&#10;    .sort-dropdown li {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        padding: 10px 12px;&#10;        border-radius: 6px;&#10;        cursor: pointer;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;    }&#10;&#10;    .sort-dropdown li:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .sort-dropdown .check-icon {&#10;        width: 18px;&#10;        height: 18px;&#10;        stroke: var(--primary-purple);&#10;    }&#10;&#10;    .header-left {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 18px;&#10;    }&#10;&#10;    .file-list-header {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        margin-bottom: 20px;&#10;        position: relative;&#10;        z-index: 20;&#10;        gap: 12px;&#10;    }&#10;&#10;    .header-right {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;    }&#10;&#10;    .header-columns {&#10;        display: flex;&#10;        gap: 12px;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .header-date,&#10;    .header-size {&#10;        font-size: 0.75rem;&#10;        color: var(--text-secondary);&#10;        text-align: center;&#10;        font-weight: 600;&#10;        text-transform: uppercase;&#10;        letter-spacing: 0;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;    }&#10;&#10;    .header-date {&#10;        width: 130px;&#10;    }&#10;&#10;    .header-size {&#10;        width: 125px;&#10;    }&#10;&#10;    .file-date,&#10;    .file-size {&#10;        font-size: 0.875rem;&#10;        color: var(--text-secondary);&#10;        white-space: nowrap;&#10;        text-align: center;&#10;        padding: 0 12px;&#10;    }&#10;&#10;    .file-date {&#10;        width: 150px;&#10;    }&#10;&#10;    .file-size {&#10;        width: 100px;&#10;    }&#10;&#10;    .favorite-btn {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        height: 24px;&#10;        width: 0;&#10;        opacity: 0;&#10;        overflow: hidden;&#10;        transition: width 0.2s ease,&#10;        opacity 0.2s ease;&#10;        margin-right: 0;&#10;    }&#10;&#10;    .file-item:hover .favorite-btn,&#10;    .favorite-btn.favorited {&#10;        width: 24px;&#10;        opacity: 1;&#10;        margin-right: 12px;&#10;    }&#10;&#10;    .star-icon {&#10;        width: 18px;&#10;        height: 18px;&#10;        stroke: var(--text-secondary);&#10;        transition: all 0.2s ease;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .favorite-btn:hover .star-icon {&#10;        stroke: var(--star-color-hover);&#10;    }&#10;&#10;    .favorite-btn.favorited .star-icon {&#10;        fill: var(--star-color-selected);&#10;        stroke: var(--star-color-selected);&#10;    }&#10;&#10;    .sort-button {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 8px;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        transition: all 0.2s ease;&#10;        background-color: transparent;&#10;        border: none;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .sort-button:hover {&#10;        background-color: var(--hover-bg);&#10;        color: #fff;&#10;    }&#10;&#10;    .sort-button:hover svg {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .sort-button svg {&#10;        width: 18px;&#10;        height: 18px;&#10;    }&#10;&#10;    button {&#10;        all: unset;&#10;        display: inline-block;&#10;        cursor: pointer;&#10;    }&#10;&#10;    .dashboard-panel {&#10;        width: 100%;&#10;        height: 90vh;&#10;        min-height: 600px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        display: flex;&#10;        overflow: hidden;&#10;    }&#10;&#10;    .sidebar {&#10;        width: 240px;&#10;        background: var(--sidebar-bg);&#10;        padding: 24px;&#10;        border-right: 1px solid var(--border-color);&#10;        flex-shrink: 0;&#10;        display: flex;&#10;        flex-direction: column;&#10;        justify-content: space-between;&#10;    }&#10;&#10;    .logo {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .logo-text {&#10;        font-size: 1.1rem;&#10;        font-weight: 600;&#10;        color: #fff;&#10;    }&#10;&#10;    .nav-links {&#10;        list-style: none;&#10;        display: flex;&#10;        flex-direction: column;&#10;        gap: 8px;&#10;    }&#10;&#10;    .nav-links svg {&#10;        color: var(--text-secondary);&#10;        transition: color 0.2s ease;&#10;    }&#10;&#10;    .nav-links li button {&#10;        all: unset;&#10;        width: 100%;&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 16px;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        text-decoration: none;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        transition: all 0.2s ease;&#10;        cursor: pointer;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .nav-links li button:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .nav-links li.active button {&#10;        background-color: var(--active-selection-bg);&#10;        color: #fff;&#10;        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);&#10;    }&#10;&#10;    .nav-links li.active button svg,&#10;    .nav-links li button:hover svg {&#10;        color: #fff;&#10;    }&#10;&#10;    .main-content {&#10;        flex-grow: 1;&#10;        display: flex;&#10;        flex-direction: column;&#10;        width: calc(100% - 240px);&#10;        position: relative;&#10;    }&#10;&#10;    .top-bar {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        padding: 20px 24px;&#10;        border-bottom: 1px solid var(--border-color);&#10;        flex-shrink: 0;&#10;        gap: 12px;&#10;    }&#10;&#10;    .top-bar-actions {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .search-bar {&#10;        position: relative;&#10;        flex: 1;&#10;        min-width: 200px;&#10;        max-width: none;&#10;    }&#10;&#10;    .search-bar .search-icon {&#10;        position: absolute;&#10;        left: 14px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;        color: var(--text-secondary);&#10;    }&#10;&#10;    .search-bar input {&#10;        width: 100%;&#10;        padding: 10px 14px 10px 42px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), sans-serif;&#10;    }&#10;&#10;    .search-bar input::placeholder {&#10;        color: var(--text-secondary);&#10;    }&#10;&#10;    .search-bar input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .logout-button {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 40px;&#10;        height: 40px;&#10;        cursor: pointer;&#10;        color: var(--text-secondary);&#10;        padding: 8px;&#10;        border-radius: 50%;&#10;        transition: all 0.2s ease;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .logout-button:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .file-list-container {&#10;        flex-grow: 1;&#10;        padding: 24px;&#10;        overflow-y: auto;&#10;    }&#10;&#10;    .file-list-container h2 {&#10;        font-size: 1.5rem;&#10;        font-weight: 600;&#10;    }&#10;&#10;    .file-list {&#10;        list-style-type: none;&#10;        overflow-x: auto;&#10;    }&#10;&#10;    .file-item {&#10;        display: grid;&#10;        grid-template-columns: auto auto auto 1fr 150px 100px;&#10;        align-items: center;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        transition: background-color 0.2s ease;&#10;        cursor: pointer;&#10;        gap: 12px;&#10;    }&#10;&#10;    .file-name {&#10;        flex-grow: 1;&#10;    }&#10;&#10;    .file-date,&#10;    .file-size {&#10;        font-size: 0.875rem;&#10;        color: var(--text-secondary);&#10;        white-space: nowrap;&#10;        text-align: center;&#10;    }&#10;&#10;    .file-date {&#10;        width: 150px;&#10;    }&#10;&#10;    .file-size {&#10;        width: 100px;&#10;    }&#10;&#10;    .file-item:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .input-checkbox {&#10;        -webkit-appearance: none;&#10;        appearance: none;&#10;        background-color: transparent;&#10;        margin: 0;&#10;        font: inherit;&#10;        color: currentColor;&#10;&#10;        width: 18px;&#10;        height: 18px;&#10;        border: 2px solid var(--text-secondary);&#10;        border-radius: 4px;&#10;        /* margin-right: 18px; */&#10;        flex-shrink: 0;&#10;        cursor: pointer;&#10;&#10;        display: grid;&#10;        place-content: center;&#10;        transition: all 0.15s ease-in-out;&#10;    }&#10;&#10;    .input-checkbox::before {&#10;        content: '';&#10;        width: 10px;&#10;        height: 10px;&#10;        transform: scale(0);&#10;        transition: 120ms transform ease-in-out;&#10;        box-shadow: inset 1em 1em #fff;&#10;&#10;        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);&#10;    }&#10;&#10;    .input-checkbox:checked {&#10;        background-color: var(--primary-purple);&#10;        border-color: var(--primary-purple);&#10;    }&#10;&#10;    .input-checkbox:checked::before {&#10;        transform: scale(1);&#10;    }&#10;&#10;    .input-checkbox:focus-visible {&#10;        outline: 2px solid var(--primary-purple);&#10;        outline-offset: 2px;&#10;    }&#10;&#10;    .download-bar {&#10;        position: absolute;&#10;        bottom: 24px;&#10;        left: 50%;&#10;        transform: translateX(-50%);&#10;        animation: slide-up 0.3s ease-out forwards;&#10;    }&#10;&#10;    .download-button {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        padding: 12px 24px;&#10;        background-color: var(--primary-purple);&#10;        color: #fff;&#10;        font-weight: 600;&#10;        border-radius: 8px;&#10;        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);&#10;        transition: background-color 0.2s ease,&#10;        width 0.3s ease-out;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .download-button:hover {&#10;        background-color: #a77bff;&#10;    }&#10;&#10;    .download-button .feather {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .delete-bar {&#10;        position: absolute;&#10;        bottom: 24px;&#10;        right: 24px;&#10;        animation: slide-up-right 0.3s ease-out forwards;&#10;    }&#10;&#10;    .delete-button {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 48px;&#10;        height: 48px;&#10;        padding: 12px;&#10;        background-color: #dc2626;&#10;        color: #fff;&#10;        border-radius: 50%;&#10;        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .delete-button:hover {&#10;        background-color: #b91c1c;&#10;        box-shadow: 0 4px 12px rgba(220, 38, 38, 0.5);&#10;    }&#10;&#10;    .delete-button .feather {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .delete-confirm {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        padding: 12px 16px;&#10;        background-color: #dc2626;&#10;        border-radius: 24px;&#10;        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);&#10;        animation: expand-confirm 0.3s ease-out forwards;&#10;    }&#10;&#10;    .delete-text {&#10;        color: #fff;&#10;        font-weight: 600;&#10;        font-size: 0.9rem;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .confirm-yes,&#10;    .confirm-no {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 36px;&#10;        height: 36px;&#10;        border-radius: 50%;&#10;        transition: all 0.2s ease;&#10;    }&#10;&#10;    .confirm-yes {&#10;        background-color: rgba(255, 255, 255, 0.2);&#10;    }&#10;&#10;    .confirm-yes:hover {&#10;        background-color: rgba(255, 255, 255, 0.3);&#10;    }&#10;&#10;    .confirm-no {&#10;        background-color: rgba(255, 255, 255, 0.2);&#10;    }&#10;&#10;    .confirm-no:hover {&#10;        background-color: rgba(255, 255, 255, 0.3);&#10;    }&#10;&#10;    .confirm-yes .feather,&#10;    .confirm-no .feather {&#10;        stroke: #fff;&#10;        width: 20px;&#10;        height: 20px;&#10;    }&#10;&#10;    @keyframes expand-confirm {&#10;        from {&#10;            opacity: 0;&#10;            width: 48px;&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            width: auto;&#10;        }&#10;    }&#10;&#10;    @keyframes slide-up {&#10;        from {&#10;            opacity: 0;&#10;            transform: translate(-50%, 20px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translate(-50%, 0);&#10;        }&#10;    }&#10;&#10;    @keyframes slide-up-right {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateY(20px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateY(0);&#10;        }&#10;    }&#10;&#10;    @media (max-width: 1200px) {&#10;        .sidebar {&#10;            width: 88px;&#10;            padding: 24px 16px;&#10;            transition: width 0.3s ease;&#10;        }&#10;&#10;        .upload svg {&#10;            width: 28px;&#10;            height: 28px;&#10;        }&#10;&#10;        .main-content {&#10;            width: calc(100% - 88px);&#10;            transition: width 0.3s ease;&#10;        }&#10;&#10;        .logo {&#10;            justify-content: center;&#10;        }&#10;&#10;        .logo-text,&#10;        .link-text {&#10;            display: none;&#10;        }&#10;&#10;        .nav-links li button {&#10;            justify-content: center;&#10;        }&#10;&#10;        .upload {&#10;            justify-content: center;&#10;        }&#10;&#10;        .header-columns {&#10;            display: flex;&#10;            margin-left: 20px;&#10;        }&#10;&#10;        .file-item {&#10;            grid-template-columns: auto auto auto 1fr 150px 80px;&#10;        }&#10;&#10;        .file-date,&#10;        .file-size {&#10;            display: block;&#10;        }&#10;    }&#10;&#10;    @media (max-width: 768px) {&#10;        .dashboard-panel {&#10;            height: 100vh;&#10;            width: 100vw;&#10;            border-radius: 0;&#10;            padding: 0;&#10;        }&#10;&#10;        .background-container {&#10;            padding: 0;&#10;        }&#10;&#10;        .top-bar {&#10;            padding: 12px 16px;&#10;            gap: 8px;&#10;        }&#10;&#10;        .search-bar {&#10;            flex: 1;&#10;            min-width: 150px;&#10;            max-width: none;&#10;        }&#10;&#10;        .top-bar-actions {&#10;            gap: 8px;&#10;        }&#10;&#10;        .sort-button span {&#10;            display: none;&#10;        }&#10;&#10;        .sort-button {&#10;            padding: 8px;&#10;            min-width: 40px;&#10;            justify-content: center;&#10;        }&#10;&#10;        .logout-button {&#10;            width: 40px;&#10;            height: 40px;&#10;            padding: 8px;&#10;        }&#10;&#10;        .file-list-container {&#10;            padding: 16px;&#10;            overflow-x: auto;&#10;        }&#10;&#10;        .file-list {&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-list-header {&#10;            flex-direction: row;&#10;            align-items: center;&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-list-header h2 {&#10;            font-size: 1.2rem;&#10;        }&#10;&#10;        .header-right {&#10;            width: auto;&#10;        }&#10;&#10;        .header-columns {&#10;            display: flex;&#10;            margin-right: 30px;&#10;        }&#10;&#10;        .file-item {&#10;            grid-template-columns: auto auto auto 1fr 150px 80px;&#10;            gap: 12px;&#10;            padding: 12px 16px;&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-date,&#10;        .file-size {&#10;            display: block;&#10;        }&#10;    }&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    import feather from '$lib/assets/feather-sprite.svg';&#10;    import logoUrl from '$lib/assets/logo.svg';&#10;    import FuzzySearch from 'fuzzy-search';&#10;    import StorageProgress from '../../components/storage-progress.svelte';&#10;    import { onMount } from 'svelte';&#10;&#10;    type FileDesc = {&#10;        id: number;&#10;        name: string;&#10;        is_favorite: boolean;&#10;        date: Date;&#10;        size: number;&#10;    };&#10;&#10;    let activeNavLink = $state('my-files');&#10;    let search = $state('');&#10;    let isSortMenuOpen = $state(false);&#10;    let sortBy = $state('name');&#10;    let sortOrder = $state('asc');&#10;    let isDeleteConfirming = $state(false);&#10;&#10;    let indeterminateCheckbox: HTMLInputElement;&#10;&#10;    let selectedFileIds = $state&lt;number[]&gt;([]);&#10;    let result = $state&lt;FileDesc[]&gt;([]);&#10;    let files = $state&lt;FileDesc[]&gt;([]);&#10;&#10;    // Storage tracking&#10;    const MAX_STORAGE_MB = 100;&#10;    const usedStorageMB = $derived(files.reduce((sum, file) =&gt; sum + (file.size / (1024 * 1024)), 0));&#10;&#10;    const searcher = $derived(new FuzzySearch(Array.from(files), ['name'], {&#10;        caseSensitive: false&#10;    }));&#10;&#10;    const displayedFiles = $derived(files&#10;        .filter((file) =&gt; {&#10;            if (search.length &gt; 0) {&#10;                return result.some((res) =&gt; file.id === res.id);&#10;            }&#10;            if (activeNavLink === 'favorites') {&#10;                return file.is_favorite;&#10;            }&#10;            if (activeNavLink === 'recent') {&#10;                const now = Date.now();&#10;                const oneWeekInMs = 7 * 24 * 60 * 60 * 1000;&#10;                return file.date.getTime() &gt;= (now - oneWeekInMs);&#10;            }&#10;            return true;&#10;        })&#10;        .sort((a, b) =&gt; {&#10;            let comparison: number = 0;&#10;            if (sortBy === 'name') {&#10;                const nameA = a.name || '';&#10;                const nameB = b.name || '';&#10;                comparison = nameA.localeCompare(nameB, undefined, {numeric: true});&#10;            } else if (sortBy === 'date') {&#10;                comparison = a.date.getTime() - b.date.getTime();&#10;            } else if (sortBy === 'size') {&#10;                comparison = a.size - b.size;&#10;            }&#10;            return sortOrder === 'asc' ? comparison : -comparison;&#10;        }));&#10;&#10;    const areAllDisplayedSelected = $derived(&#10;        displayedFiles.length &gt; 0 &amp;&amp; selectedFileIds.length === displayedFiles.length&#10;    );&#10;    const areSomeDisplayedSelected = $derived(selectedFileIds.length &gt; 0 &amp;&amp; !areAllDisplayedSelected);&#10;&#10;    $effect(() =&gt; {&#10;        if (indeterminateCheckbox) {&#10;            indeterminateCheckbox.indeterminate = areSomeDisplayedSelected;&#10;        }&#10;    });&#10;&#10;    function handleSortChange(newSortBy: string, newSortOrder: string) {&#10;        sortBy = newSortBy;&#10;        sortOrder = newSortOrder;&#10;        isSortMenuOpen = false;&#10;    }&#10;&#10;    function toggleFavorite(fileId: number) {&#10;        const file = files.find((f) =&gt; f.id === fileId);&#10;        if (file) {&#10;            file.is_favorite = !file.is_favorite;&#10;            files = [...files];&#10;        }&#10;    }&#10;&#10;    function toggleSelectAll() {&#10;        if (areAllDisplayedSelected) {&#10;            selectedFileIds = [];&#10;        } else {&#10;            selectedFileIds = displayedFiles.map((f) =&gt; f.id);&#10;        }&#10;    }&#10;&#10;    function handleDownload() {&#10;        console.log('Pobieranie plików o ID:', selectedFileIds);&#10;&#10;        if (selectedFileIds.length === 1) {&#10;            const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;            if (!token) {&#10;                console.error('Brak tokena - przekierowanie na /login');&#10;                window.location.href = '/login';&#10;                return;&#10;            }&#10;&#10;            const fileId = selectedFileIds[0];&#10;            const file = files.find((f) =&gt; f.id === fileId);&#10;&#10;            fetch(`http://localhost:8000/api/v1/files/${fileId}/download`, {&#10;                method: 'GET',&#10;                headers: {&#10;                    'Authorization': `Bearer ${token}`,&#10;                },&#10;            }).then((response) =&gt; {&#10;                if (response.status === 401 || response.status === 403) {&#10;                    console.error('Token nieprawidłowy - przekierowanie na /login');&#10;                    window.localStorage.removeItem('token');&#10;                    window.location.href = '/login';&#10;                    return;&#10;                }&#10;&#10;                if (!response.ok) {&#10;                    throw new Error('Download failed');&#10;                }&#10;                return response.blob();&#10;            }).then((blob) =&gt; {&#10;                if (blob) {&#10;                    const url = window.URL.createObjectURL(blob);&#10;                    const a = document.createElement('a');&#10;                    a.href = url;&#10;                    a.download = file?.name || 'plik';&#10;                    document.body.appendChild(a);&#10;                    a.click();&#10;                    window.URL.revokeObjectURL(url);&#10;                    document.body.removeChild(a);&#10;                    console.log('Plik pobrany pomyślnie');&#10;                }&#10;            }).catch((error) =&gt; {&#10;                console.error('Błąd podczas pobierania pliku:', error);&#10;            });&#10;        }&#10;    }&#10;&#10;    function handleDelete() {&#10;        if (!isDeleteConfirming) {&#10;            isDeleteConfirming = true;&#10;            return;&#10;        }&#10;&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        if (!token) {&#10;            console.error('Brak tokena - przekierowanie na /login');&#10;            window.location.href = '/login';&#10;            return;&#10;        }&#10;&#10;        for (const fileId of selectedFileIds) {&#10;            fetch(`http://localhost:8000/api/v1/files/${fileId}`, {&#10;                method: 'DELETE',&#10;                headers: {&#10;                    'Authorization': `Bearer ${token}`,&#10;                },&#10;            }).then((response) =&gt; {&#10;                if (response.status === 401 || response.status === 403) {&#10;                    console.error('Token nieprawidłowy - przekierowanie na /login');&#10;                    window.localStorage.removeItem('token');&#10;                    window.location.href = '/login';&#10;                    return;&#10;                }&#10;&#10;                if (!response.ok) {&#10;                    return response.json();&#10;                }&#10;            }).then((data) =&gt; {&#10;                if (data) {&#10;                    console.error('Błąd podczas usuwania pliku:', data.detail || data);&#10;                }&#10;            }).catch((error) =&gt; {&#10;                console.error('Błąd podczas usuwania pliku:', error);&#10;            });&#10;        }&#10;&#10;        setTimeout(() =&gt; {&#10;            fetchFiles();&#10;            selectedFileIds = [];&#10;            isDeleteConfirming = false;&#10;        }, 500);&#10;    }&#10;&#10;    function cancelDelete() {&#10;        isDeleteConfirming = false;&#10;    }&#10;&#10;    function handleLogout() {&#10;        console.log('Wylogowywanie...');&#10;        window.localStorage.removeItem('token');&#10;        window.location.href = '/login';&#10;    }&#10;&#10;    function handleSearch() {&#10;        result = searcher.search(search);&#10;    }&#10;&#10;    function fetchFiles() {&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/files/&quot;, {&#10;            method: 'GET',&#10;            headers: {&#10;                'Authorization': `Bearer ${token}`,&#10;            },&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Failed to fetch files');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            console.log('Pobrano pliki:', data);&#10;&#10;            files = data.files.map((file: any) =&gt; ({&#10;                id: file.id,&#10;                name: file.name || 'Nieznany plik',&#10;                is_favorite: file.is_favorite || false,&#10;                date: new Date(file.updated_at.replace('Z', '')),&#10;                size: file.size || 0&#10;            }));&#10;        }).catch((error) =&gt; {&#10;            console.error('Błąd podczas pobierania plików:', error);&#10;        });&#10;    }&#10;&#10;    function handleFileUpload(event: Event) {&#10;        const input = event.target as HTMLInputElement;&#10;        const file = input.files?.[0];&#10;&#10;        if (!file) {&#10;            console.error('Nie wybrano pliku');&#10;            return;&#10;        }&#10;&#10;        const formData = new FormData();&#10;        formData.append('file', file);&#10;&#10;        const token = JSON.parse(window.localStorage.getItem('token') || '&quot;&quot;');&#10;&#10;        if (!token) {&#10;            console.error('Brak tokena - przekierowanie na /login');&#10;            window.location.href = '/login';&#10;            return;&#10;        }&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/files/upload&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Authorization': `Bearer ${token}`,&#10;            },&#10;            body: formData,&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Upload failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            console.log('Plik przesłany pomyślnie:', data);&#10;            input.value = '';&#10;            // Odśwież listę plików po przesłaniu&#10;            fetchFiles();&#10;        }).catch((error) =&gt; {&#10;            console.error('Błąd podczas przesyłania pliku:', error);&#10;        });&#10;    }&#10;&#10;    onMount(() =&gt; {&#10;        fetchFiles();&#10;    });&#10;&#10;    function formatBytes(bytes: number, decimals = 2) {&#10;        if (bytes === 0) return '0 Bytes';&#10;        const k = 1024;&#10;        const dm = decimals &lt; 0 ? 0 : decimals;&#10;        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];&#10;&#10;        const i = Math.floor(Math.log(bytes) / Math.log(k));&#10;&#10;        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;background-container&quot;&gt;&#10;    &lt;div class=&quot;dashboard-panel&quot;&gt;&#10;        &lt;nav class=&quot;sidebar&quot;&gt;&#10;            &lt;div&gt;&#10;                &lt;div class=&quot;logo&quot;&gt;&#10;                    &lt;img alt=&quot;Logo&quot; height=&quot;32&quot; src={logoUrl} width=&quot;32&quot;/&gt;&#10;                    &lt;span class=&quot;logo-text&quot;&gt;SPCloud&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;ul class=&quot;nav-links&quot;&gt;&#10;                    &lt;li class:active={activeNavLink === 'my-files'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'my-files')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#hard-drive&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Moje pliki&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                    &lt;li class:active={activeNavLink === 'favorites'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'favorites')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#star&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Ulubione&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                    &lt;li class:active={activeNavLink === 'recent'}&gt;&#10;                        &lt;button onclick={() =&gt; (activeNavLink = 'recent')}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#clock&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;link-text&quot;&gt;Najnowsze&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;                &lt;StorageProgress usedStorage={usedStorageMB} maxStorage={MAX_STORAGE_MB}/&gt;&#10;                &lt;div class=&quot;upload&quot;&gt;&#10;                    &lt;svg class=&quot;feather&quot;&gt;&#10;                        &lt;use href=&quot;{feather}#upload-cloud&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;label for=&quot;upload&quot; class=&quot;link-text&quot;&gt;Prześlij plik&lt;/label&gt;&#10;                    &lt;input type=&quot;file&quot; id=&quot;upload&quot; onchange={handleFileUpload}/&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/nav&gt;&#10;&#10;        &lt;div class=&quot;main-content&quot;&gt;&#10;            &lt;header class=&quot;top-bar&quot;&gt;&#10;                &lt;div class=&quot;search-bar&quot;&gt;&#10;                    &lt;svg class=&quot;feather search-icon&quot;&gt;&#10;                        &lt;use href=&quot;{feather}#search&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                    &lt;input placeholder=&quot;Search&quot; type=&quot;text&quot; bind:value={search} oninput={handleSearch}/&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;top-bar-actions&quot;&gt;&#10;                    &lt;div class=&quot;sort-menu&quot;&gt;&#10;                        &lt;button class=&quot;sort-button&quot; onclick={() =&gt; (isSortMenuOpen = !isSortMenuOpen)}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#sliders&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span&gt;Sortuj&lt;/span&gt;&#10;                        &lt;/button&gt;&#10;&#10;                        {#if isSortMenuOpen}&#10;                            &lt;ul class=&quot;sort-dropdown&quot;&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('name', 'asc')}&#10;                                    &gt;&#10;                                        Nazwa&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'name' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('name', 'desc')}&#10;                                    &gt;&#10;                                        Nazwa&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'name' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('date', 'asc')}&#10;                                    &gt;&#10;                                        Data&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'date' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('date', 'desc')}&#10;                                    &gt;&#10;                                        Data&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'date' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('size', 'asc')}&#10;                                    &gt;&#10;                                        Rozmiar&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-up&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'size' &amp;&amp; sortOrder === 'asc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                                &lt;li class=&quot;sortable-header&quot;&gt;&#10;                                    &lt;button&#10;                                            type=&quot;button&quot;&#10;                                            class=&quot;sort-btn&quot;&#10;                                            onclick={() =&gt; handleSortChange('size', 'desc')}&#10;                                    &gt;&#10;                                        Rozmiar&#10;                                        &lt;svg class=&quot;feather sort-arrow&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#arrow-down&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    &lt;/button&gt;&#10;                                    {#if sortBy === 'size' &amp;&amp; sortOrder === 'desc'}&#10;                                        &lt;svg class=&quot;feather check-icon&quot;&gt;&#10;                                            &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                    {/if}&#10;                                &lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        {/if}&#10;                    &lt;/div&gt;&#10;                    &lt;button class=&quot;logout-button&quot; onclick={handleLogout} title=&quot;Wyloguj się&quot;&gt;&#10;                        &lt;svg class=&quot;feather&quot;&gt;&#10;                            &lt;use href=&quot;{feather}#log-out&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/header&gt;&#10;&#10;            &lt;main class=&quot;file-list-container&quot;&gt;&#10;                &lt;div class=&quot;file-list-header&quot;&gt;&#10;                    &lt;div class=&quot;header-left&quot;&gt;&#10;                        &lt;input&#10;                                type=&quot;checkbox&quot;&#10;                                class=&quot;input-checkbox&quot;&#10;                                onclick={toggleSelectAll}&#10;                                checked={areAllDisplayedSelected}&#10;                                bind:this={indeterminateCheckbox}&#10;                        /&gt;&#10;                        &lt;h2&gt;Lista plików&lt;/h2&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;header-right&quot;&gt;&#10;                        &lt;div class=&quot;header-columns&quot;&gt;&#10;                            &lt;span class=&quot;header-date&quot;&gt;Data modyfikacji&lt;/span&gt;&#10;                            &lt;span class=&quot;header-size&quot;&gt;Rozmiar&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;ul class=&quot;file-list&quot;&gt;&#10;                    {#each displayedFiles as file (file.id)}&#10;                        &lt;li class=&quot;file-item&quot;&gt;&#10;                            &lt;input&#10;                                    type=&quot;checkbox&quot;&#10;                                    bind:group={selectedFileIds}&#10;                                    value={file.id}&#10;                                    name={file.id.toString()}&#10;                                    id={file.id.toString()}&#10;                                    class=&quot;input-checkbox&quot;&#10;                            /&gt;&#10;                            &lt;button&#10;                                    aria-label=&quot;favorite button&quot;&#10;                                    class=&quot;favorite-btn&quot;&#10;                                    class:favorited={file.is_favorite}&#10;                                    onclick={() =&gt; toggleFavorite(file.id)}&#10;                            &gt;&#10;                                &lt;svg class=&quot;feather star-icon&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#star&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                            &lt;svg class=&quot;feather file&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#file&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span class=&quot;file-name&quot;&gt;{file.name}&lt;/span&gt;&#10;                            &lt;span class=&quot;file-date&quot;&gt;{file.date.toLocaleDateString('pl-PL', {&#10;                                year: 'numeric',&#10;                                month: '2-digit',&#10;                                day: '2-digit',&#10;                                hour: '2-digit',&#10;                                minute: '2-digit'&#10;                            })}&lt;/span&gt;&#10;                            &lt;span class=&quot;file-size&quot;&gt;{formatBytes(file.size)}&lt;/span&gt;&#10;                        &lt;/li&gt;&#10;                    {/each}&#10;                &lt;/ul&gt;&#10;            &lt;/main&gt;&#10;&#10;            {#if selectedFileIds.length &gt; 0}&#10;                &lt;div class=&quot;download-bar&quot;&gt;&#10;                    &lt;button class=&quot;download-button&quot; onclick={handleDownload}&gt;&#10;                        &lt;svg class=&quot;feather&quot;&gt;&#10;                            &lt;use href=&quot;{feather}#download&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        {#if selectedFileIds.length === 1}&#10;                            Pobierz&#10;                        {:else}&#10;                            Pobierz wiele plików&#10;                        {/if}&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;delete-bar&quot;&gt;&#10;                    {#if !isDeleteConfirming}&#10;                        &lt;button class=&quot;delete-button&quot; onclick={handleDelete}&gt;&#10;                            &lt;svg class=&quot;feather&quot;&gt;&#10;                                &lt;use href=&quot;{feather}#trash-2&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/button&gt;&#10;                    {:else}&#10;                        &lt;div class=&quot;delete-confirm&quot;&gt;&#10;                            &lt;span class=&quot;delete-text&quot;&gt;Czy na pewno?&lt;/span&gt;&#10;                            &lt;button class=&quot;confirm-yes&quot; onclick={handleDelete} title=&quot;Tak, usuń&quot;&gt;&#10;                                &lt;svg class=&quot;feather&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#check&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                            &lt;button class=&quot;confirm-no&quot; onclick={cancelDelete} title=&quot;Nie, anuluj&quot;&gt;&#10;                                &lt;svg class=&quot;feather&quot;&gt;&#10;                                    &lt;use href=&quot;{feather}#x&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    {/if}&#10;                &lt;/div&gt;&#10;            {/if}&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    * {&#10;        margin: 0;&#10;        padding: 0;&#10;        box-sizing: border-box;&#10;        color: var(--text-primary);&#10;    }&#10;&#10;    .feather {&#10;        width: 24px;&#10;        height: 24px;&#10;        stroke: var(--text-primary);&#10;        stroke-width: 2;&#10;        stroke-linecap: round;&#10;        stroke-linejoin: round;&#10;        fill: none;&#10;    }&#10;&#10;    input[type='file'] {&#10;        display: none;&#10;    }&#10;&#10;    .upload {&#10;        cursor: pointer;&#10;    }&#10;&#10;    .feather.file {&#10;        margin-right: 8px;&#10;    }&#10;&#10;    :global(body) {&#10;        font-family: var(--font-family), sans-serif;&#10;        overflow: hidden;&#10;    }&#10;&#10;    .background-container {&#10;        width: 100vw;&#10;        height: 100vh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        padding: 40px;&#10;    }&#10;&#10;    .upload {&#10;        width: 100%;&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 16px;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        text-decoration: none;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        transition: all 0.2s ease;&#10;        background-color: transparent;&#10;        border: none;&#10;        cursor: pointer;&#10;    }&#10;&#10;    .upload label {&#10;        cursor: pointer;&#10;    }&#10;&#10;    .upload:hover {&#10;        background-color: var(--hover-bg);&#10;        color: #fff;&#10;    }&#10;&#10;    .upload:hover svg {&#10;        color: #fff;&#10;    }&#10;&#10;    .sort-menu {&#10;        position: relative;&#10;    }&#10;&#10;    .sort-dropdown {&#10;        position: absolute;&#10;        top: calc(100% + 8px);&#10;        right: 0;&#10;        background-color: var(--dropdown-bg);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        list-style: none;&#10;        padding: 8px;&#10;        width: 200px;&#10;        z-index: 1000;&#10;        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);&#10;    }&#10;&#10;    .sort-btn {&#10;        all: unset;&#10;        display: flex;&#10;        align-items: center;&#10;        cursor: pointer;&#10;        width: 100%;&#10;    }&#10;&#10;    .sort-arrow {&#10;        width: 16px;&#10;        height: 16px;&#10;        margin-left: 6px;&#10;    }&#10;&#10;    .sort-dropdown li {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        padding: 10px 12px;&#10;        border-radius: 6px;&#10;        cursor: pointer;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;    }&#10;&#10;    .sort-dropdown li:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .sort-dropdown .check-icon {&#10;        width: 18px;&#10;        height: 18px;&#10;        stroke: var(--primary-purple);&#10;    }&#10;&#10;    .header-left {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 18px;&#10;    }&#10;&#10;    .file-list-header {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        margin-bottom: 20px;&#10;        position: relative;&#10;        z-index: 20;&#10;        gap: 12px;&#10;    }&#10;&#10;    .header-right {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;    }&#10;&#10;    .header-columns {&#10;        display: flex;&#10;        gap: 12px;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .header-date,&#10;    .header-size {&#10;        font-size: 0.75rem;&#10;        color: var(--text-secondary);&#10;        text-align: center;&#10;        font-weight: 600;&#10;        text-transform: uppercase;&#10;        letter-spacing: 0;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;    }&#10;&#10;    .header-date {&#10;        width: 130px;&#10;    }&#10;&#10;    .header-size {&#10;        width: 125px;&#10;    }&#10;&#10;    .file-date,&#10;    .file-size {&#10;        font-size: 0.875rem;&#10;        color: var(--text-secondary);&#10;        white-space: nowrap;&#10;        text-align: center;&#10;        padding: 0 12px;&#10;    }&#10;&#10;    .file-date {&#10;        width: 150px;&#10;    }&#10;&#10;    .file-size {&#10;        width: 100px;&#10;    }&#10;&#10;    .favorite-btn {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        height: 24px;&#10;        width: 0;&#10;        opacity: 0;&#10;        overflow: hidden;&#10;        transition: width 0.2s ease,&#10;        opacity 0.2s ease;&#10;        margin-right: 0;&#10;    }&#10;&#10;    .file-item:hover .favorite-btn,&#10;    .favorite-btn.favorited {&#10;        width: 24px;&#10;        opacity: 1;&#10;        margin-right: 12px;&#10;    }&#10;&#10;    .star-icon {&#10;        width: 18px;&#10;        height: 18px;&#10;        stroke: var(--text-secondary);&#10;        transition: all 0.2s ease;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .favorite-btn:hover .star-icon {&#10;        stroke: var(--star-color-hover);&#10;    }&#10;&#10;    .favorite-btn.favorited .star-icon {&#10;        fill: var(--star-color-selected);&#10;        stroke: var(--star-color-selected);&#10;    }&#10;&#10;    .sort-button {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 8px;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        transition: all 0.2s ease;&#10;        background-color: transparent;&#10;        border: none;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .sort-button:hover {&#10;        background-color: var(--hover-bg);&#10;        color: #fff;&#10;    }&#10;&#10;    .sort-button:hover svg {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .sort-button svg {&#10;        width: 18px;&#10;        height: 18px;&#10;    }&#10;&#10;    button {&#10;        all: unset;&#10;        display: inline-block;&#10;        cursor: pointer;&#10;    }&#10;&#10;    .dashboard-panel {&#10;        width: 100%;&#10;        height: 90vh;&#10;        min-height: 600px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        display: flex;&#10;        overflow: hidden;&#10;    }&#10;&#10;    .sidebar {&#10;        width: 240px;&#10;        background: var(--sidebar-bg);&#10;        padding: 24px;&#10;        border-right: 1px solid var(--border-color);&#10;        flex-shrink: 0;&#10;        display: flex;&#10;        flex-direction: column;&#10;        justify-content: space-between;&#10;    }&#10;&#10;    .logo {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .logo-text {&#10;        font-size: 1.1rem;&#10;        font-weight: 600;&#10;        color: #fff;&#10;    }&#10;&#10;    .nav-links {&#10;        list-style: none;&#10;        display: flex;&#10;        flex-direction: column;&#10;        gap: 8px;&#10;    }&#10;&#10;    .nav-links svg {&#10;        color: var(--text-secondary);&#10;        transition: color 0.2s ease;&#10;    }&#10;&#10;    .nav-links li button {&#10;        all: unset;&#10;        width: 100%;&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 16px;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        text-decoration: none;&#10;        color: var(--text-secondary);&#10;        font-weight: 500;&#10;        transition: all 0.2s ease;&#10;        cursor: pointer;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .nav-links li button:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .nav-links li.active button {&#10;        background-color: var(--active-selection-bg);&#10;        color: #fff;&#10;        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);&#10;    }&#10;&#10;    .nav-links li.active button svg,&#10;    .nav-links li button:hover svg {&#10;        color: #fff;&#10;    }&#10;&#10;    .main-content {&#10;        flex-grow: 1;&#10;        display: flex;&#10;        flex-direction: column;&#10;        width: calc(100% - 240px);&#10;        position: relative;&#10;    }&#10;&#10;    .top-bar {&#10;        display: flex;&#10;        justify-content: space-between;&#10;        align-items: center;&#10;        padding: 20px 24px;&#10;        border-bottom: 1px solid var(--border-color);&#10;        flex-shrink: 0;&#10;        gap: 12px;&#10;    }&#10;&#10;    .top-bar-actions {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .search-bar {&#10;        position: relative;&#10;        flex: 1;&#10;        min-width: 200px;&#10;        max-width: none;&#10;    }&#10;&#10;    .search-bar .search-icon {&#10;        position: absolute;&#10;        left: 14px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;        color: var(--text-secondary);&#10;    }&#10;&#10;    .search-bar input {&#10;        width: 100%;&#10;        padding: 10px 14px 10px 42px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), sans-serif;&#10;    }&#10;&#10;    .search-bar input::placeholder {&#10;        color: var(--text-secondary);&#10;    }&#10;&#10;    .search-bar input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .logout-button {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 40px;&#10;        height: 40px;&#10;        cursor: pointer;&#10;        color: var(--text-secondary);&#10;        padding: 8px;&#10;        border-radius: 50%;&#10;        transition: all 0.2s ease;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    .logout-button:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .file-list-container {&#10;        flex-grow: 1;&#10;        padding: 24px;&#10;        overflow-y: auto;&#10;    }&#10;&#10;    .file-list-container h2 {&#10;        font-size: 1.5rem;&#10;        font-weight: 600;&#10;    }&#10;&#10;    .file-list {&#10;        list-style-type: none;&#10;        overflow-x: auto;&#10;    }&#10;&#10;    .file-item {&#10;        display: grid;&#10;        grid-template-columns: auto auto auto 1fr 150px 100px;&#10;        align-items: center;&#10;        padding: 12px 16px;&#10;        border-radius: 8px;&#10;        transition: background-color 0.2s ease;&#10;        cursor: pointer;&#10;        gap: 12px;&#10;    }&#10;&#10;    .file-name {&#10;        flex-grow: 1;&#10;    }&#10;&#10;    .file-date,&#10;    .file-size {&#10;        font-size: 0.875rem;&#10;        color: var(--text-secondary);&#10;        white-space: nowrap;&#10;        text-align: center;&#10;    }&#10;&#10;    .file-date {&#10;        width: 150px;&#10;    }&#10;&#10;    .file-size {&#10;        width: 100px;&#10;    }&#10;&#10;    .file-item:hover {&#10;        background-color: var(--hover-bg);&#10;    }&#10;&#10;    .input-checkbox {&#10;        -webkit-appearance: none;&#10;        appearance: none;&#10;        background-color: transparent;&#10;        margin: 0;&#10;        font: inherit;&#10;        color: currentColor;&#10;&#10;        width: 18px;&#10;        height: 18px;&#10;        border: 2px solid var(--text-secondary);&#10;        border-radius: 4px;&#10;        /* margin-right: 18px; */&#10;        flex-shrink: 0;&#10;        cursor: pointer;&#10;&#10;        display: grid;&#10;        place-content: center;&#10;        transition: all 0.15s ease-in-out;&#10;    }&#10;&#10;    .input-checkbox::before {&#10;        content: '';&#10;        width: 10px;&#10;        height: 10px;&#10;        transform: scale(0);&#10;        transition: 120ms transform ease-in-out;&#10;        box-shadow: inset 1em 1em #fff;&#10;&#10;        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);&#10;    }&#10;&#10;    .input-checkbox:checked {&#10;        background-color: var(--primary-purple);&#10;        border-color: var(--primary-purple);&#10;    }&#10;&#10;    .input-checkbox:checked::before {&#10;        transform: scale(1);&#10;    }&#10;&#10;    .input-checkbox:focus-visible {&#10;        outline: 2px solid var(--primary-purple);&#10;        outline-offset: 2px;&#10;    }&#10;&#10;    .download-bar {&#10;        position: absolute;&#10;        bottom: 24px;&#10;        left: 50%;&#10;        transform: translateX(-50%);&#10;        animation: slide-up 0.3s ease-out forwards;&#10;    }&#10;&#10;    .download-button {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        padding: 12px 24px;&#10;        background-color: var(--primary-purple);&#10;        color: #fff;&#10;        font-weight: 600;&#10;        border-radius: 8px;&#10;        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);&#10;        transition: background-color 0.2s ease,&#10;        width 0.3s ease-out;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .download-button:hover {&#10;        background-color: #a77bff;&#10;    }&#10;&#10;    .download-button .feather {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .delete-bar {&#10;        position: absolute;&#10;        bottom: 24px;&#10;        right: 24px;&#10;        animation: slide-up-right 0.3s ease-out forwards;&#10;    }&#10;&#10;    .delete-button {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 48px;&#10;        height: 48px;&#10;        padding: 12px;&#10;        background-color: #dc2626;&#10;        color: #fff;&#10;        border-radius: 50%;&#10;        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .delete-button:hover {&#10;        background-color: #b91c1c;&#10;        box-shadow: 0 4px 12px rgba(220, 38, 38, 0.5);&#10;    }&#10;&#10;    .delete-button .feather {&#10;        stroke: #fff;&#10;    }&#10;&#10;    .delete-confirm {&#10;        display: flex;&#10;        align-items: center;&#10;        gap: 12px;&#10;        padding: 12px 16px;&#10;        background-color: #dc2626;&#10;        border-radius: 24px;&#10;        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);&#10;        animation: expand-confirm 0.3s ease-out forwards;&#10;    }&#10;&#10;    .delete-text {&#10;        color: #fff;&#10;        font-weight: 600;&#10;        font-size: 0.9rem;&#10;        white-space: nowrap;&#10;    }&#10;&#10;    .confirm-yes,&#10;    .confirm-no {&#10;        display: flex;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 36px;&#10;        height: 36px;&#10;        border-radius: 50%;&#10;        transition: all 0.2s ease;&#10;    }&#10;&#10;    .confirm-yes {&#10;        background-color: rgba(255, 255, 255, 0.2);&#10;    }&#10;&#10;    .confirm-yes:hover {&#10;        background-color: rgba(255, 255, 255, 0.3);&#10;    }&#10;&#10;    .confirm-no {&#10;        background-color: rgba(255, 255, 255, 0.2);&#10;    }&#10;&#10;    .confirm-no:hover {&#10;        background-color: rgba(255, 255, 255, 0.3);&#10;    }&#10;&#10;    .confirm-yes .feather,&#10;    .confirm-no .feather {&#10;        stroke: #fff;&#10;        width: 20px;&#10;        height: 20px;&#10;    }&#10;&#10;    @keyframes expand-confirm {&#10;        from {&#10;            opacity: 0;&#10;            width: 48px;&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            width: auto;&#10;        }&#10;    }&#10;&#10;    @keyframes slide-up {&#10;        from {&#10;            opacity: 0;&#10;            transform: translate(-50%, 20px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translate(-50%, 0);&#10;        }&#10;    }&#10;&#10;    @keyframes slide-up-right {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateY(20px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateY(0);&#10;        }&#10;    }&#10;&#10;    @media (max-width: 1200px) {&#10;        .sidebar {&#10;            width: 88px;&#10;            padding: 24px 16px;&#10;            transition: width 0.3s ease;&#10;        }&#10;&#10;        .upload svg {&#10;            width: 28px;&#10;            height: 28px;&#10;        }&#10;&#10;        .main-content {&#10;            width: calc(100% - 88px);&#10;            transition: width 0.3s ease;&#10;        }&#10;&#10;        .logo {&#10;            justify-content: center;&#10;        }&#10;&#10;        .logo-text,&#10;        .link-text {&#10;            display: none;&#10;        }&#10;&#10;        .nav-links li button {&#10;            justify-content: center;&#10;        }&#10;&#10;        .upload {&#10;            justify-content: center;&#10;        }&#10;&#10;        .header-columns {&#10;            display: flex;&#10;            margin-left: 20px;&#10;        }&#10;&#10;        .file-item {&#10;            grid-template-columns: auto auto auto 1fr 150px 80px;&#10;        }&#10;&#10;        .file-date,&#10;        .file-size {&#10;            display: block;&#10;        }&#10;    }&#10;&#10;    @media (max-width: 768px) {&#10;        .dashboard-panel {&#10;            height: 100vh;&#10;            width: 100vw;&#10;            border-radius: 0;&#10;            padding: 0;&#10;        }&#10;&#10;        .background-container {&#10;            padding: 0;&#10;        }&#10;&#10;        .top-bar {&#10;            padding: 12px 16px;&#10;            gap: 8px;&#10;        }&#10;&#10;        .search-bar {&#10;            flex: 1;&#10;            min-width: 150px;&#10;            max-width: none;&#10;        }&#10;&#10;        .top-bar-actions {&#10;            gap: 8px;&#10;        }&#10;&#10;        .sort-button span {&#10;            display: none;&#10;        }&#10;&#10;        .sort-button {&#10;            padding: 8px;&#10;            min-width: 40px;&#10;            justify-content: center;&#10;        }&#10;&#10;        .logout-button {&#10;            width: 40px;&#10;            height: 40px;&#10;            padding: 8px;&#10;        }&#10;&#10;        .file-list-container {&#10;            padding: 16px;&#10;            overflow-x: auto;&#10;        }&#10;&#10;        .file-list {&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-list-header {&#10;            flex-direction: row;&#10;            align-items: center;&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-list-header h2 {&#10;            font-size: 1.2rem;&#10;        }&#10;&#10;        .header-right {&#10;            width: auto;&#10;        }&#10;&#10;        .header-columns {&#10;            display: flex;&#10;            margin-right: 30px;&#10;        }&#10;&#10;        .file-item {&#10;            grid-template-columns: auto auto auto 1fr 150px 80px;&#10;            gap: 12px;&#10;            padding: 12px 16px;&#10;            min-width: 800px;&#10;        }&#10;&#10;        .file-date,&#10;        .file-size {&#10;            display: block;&#10;        }&#10;    }&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/routes/login/+page.svelte">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/routes/login/+page.svelte" />
              <option name="originalContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    let username = '';&#10;    let password = '';&#10;    let loginFailed = false;&#10;&#10;    function handleLogin() {&#10;        console.log('Login:', username);&#10;&#10;        loginFailed = false;&#10;        fetch(&quot;http://localhost:8000/api/v1/users/login&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Content-Type': 'application/json',&#10;            },&#10;            body: JSON.stringify({ username, password }),&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Login failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            if (data.access_token) {&#10;                console.log('Success:', data);&#10;                window.localStorage.setItem('token', JSON.stringify(data.access_token));&#10;                window.location.href = '/dashboard';&#10;            } else {&#10;                loginFailed = true;&#10;                console.error('Login failed:', data.detail);&#10;            }&#10;        }).catch((error) =&gt; {&#10;            loginFailed = true;&#10;            console.error(error);&#10;        })&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;background-container&quot;&gt;&#10;    &lt;div class=&quot;login-panel&quot;&gt;&#10;        &lt;div class=&quot;title&quot;&gt;&#10;            &lt;h1&gt;SPCloud&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;form onsubmit={handleLogin}&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;username&quot;&gt;Login&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;text&quot;&#10;                        id=&quot;username&quot;&#10;                        bind:value={username}&#10;                        placeholder=&quot;Wprowadź login&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;password&quot;&#10;                        bind:value={password}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;`&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-login&quot;&gt;Zaloguj się&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        {#if loginFailed}&#10;            &lt;div class=&quot;error&quot;&gt;Zły login lub hasło!&lt;/div&gt;&#10;        {/if}&#10;        &lt;div class=&quot;register-section&quot;&gt;&#10;            &lt;a href=&quot;/register&quot; class=&quot;btn-register&quot;&gt; Zarejestruj się &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    .background-container {&#10;        width: 100%;&#10;        min-height: 100dvh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        margin: 0;&#10;        padding: 0;&#10;        overflow-x: hidden;&#10;        position: relative;&#10;    }&#10;&#10;    .login-panel {&#10;        width: 100%;&#10;        max-width: 400px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        padding: 40px;&#10;        animation: slideIn 0.5s ease-out;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    @keyframes slideIn {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(-50px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;&#10;    .title {&#10;        text-align: center;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .title h1 {&#10;        color: #fff;&#10;        font-size: 28px;&#10;        font-weight: 600;&#10;        margin: 0;&#10;    }&#10;&#10;    .form-group {&#10;        margin-bottom: 20px;&#10;    }&#10;&#10;    .form-group label {&#10;        display: block;&#10;        color: var(--text-secondary);&#10;        font-size: 14px;&#10;        font-weight: 500;&#10;        margin-bottom: 8px;&#10;    }&#10;&#10;    .form-group input {&#10;        width: 100%;&#10;        padding: 12px 15px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), serif;&#10;        color: var(--text-primary);&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .form-group input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .btn-login {&#10;        width: 100%;&#10;        padding: 14px;&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        border: none;&#10;        border-radius: 10px;&#10;        font-size: 16px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;        margin-top: 10px;&#10;    }&#10;&#10;    .btn-login:hover {&#10;        transform: translateY(-2px);&#10;        box-shadow: 0 5px 20px rgba(157, 115, 255, 0.4);&#10;    }&#10;&#10;    .btn-login:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .register-section {&#10;        margin-top: 30px;&#10;        padding-top: 20px;&#10;        border-top: 1px solid var(--border-color);&#10;        text-align: center;&#10;    }&#10;&#10;    .btn-register {&#10;        text-decoration: none;&#10;        background: transparent;&#10;        color: var(--primary-purple);&#10;        border: 2px solid var(--primary-purple);&#10;        padding: 12px 30px;&#10;        border-radius: 10px;&#10;        font-size: 15px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .btn-register:hover {&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        transform: translateY(-2px);&#10;    }&#10;&#10;    .btn-register:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .error {&#10;        color: red;&#10;        text-align: center;&#10;        padding: 2px;&#10;    }&#10;&#10;    /* Phone */&#10;    @media (max-width: 768px) {&#10;        .background-container {&#10;            padding: 15px;&#10;            justify-content: center;&#10;            align-items: center;&#10;            min-height: 100dvh;&#10;            background-attachment: scroll;&#10;            background-size: cover;&#10;            background-position: center center;&#10;        }&#10;&#10;        .login-panel {&#10;            max-width: 100%;&#10;            width: 100%;&#10;            padding: 25px 18px;&#10;            max-height: none;&#10;            border-radius: 12px;&#10;            margin: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 24px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 16px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 13px;&#10;            margin-bottom: 6px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 12px 14px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 13px;&#10;            font-size: 15px;&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 20px;&#10;            padding-top: 16px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 11px 25px;&#10;            font-size: 14px;&#10;            display: inline-block;&#10;        }&#10;    }&#10;&#10;    /* Small phones */&#10;    @media (max-width: 480px) {&#10;        .background-container {&#10;            padding: 10px;&#10;            min-height: 100svh;&#10;        }&#10;&#10;        .login-panel {&#10;            padding: 22px 16px;&#10;            border-radius: 10px;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 22px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 22px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 14px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 12px;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 11px 12px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 12px;&#10;            font-size: 15px;&#10;            margin-top: 6px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 18px;&#10;            padding-top: 14px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 10px 20px;&#10;            font-size: 14px;&#10;        }&#10;&#10;        .error {&#10;            font-size: 13px;&#10;            padding: 4px;&#10;            margin-top: 10px;&#10;        }&#10;    }&#10;&#10;    /* Very small phones */&#10;    @media (max-width: 360px) {&#10;        .background-container {&#10;            padding: 8px;&#10;            min-height: 100svh;&#10;        }&#10;&#10;        .login-panel {&#10;            padding: 20px 14px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 20px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 10px 11px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 11px;&#10;            font-size: 14px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 9px 18px;&#10;            font-size: 13px;&#10;        }&#10;    }&#10;&#10;    /* Tablet and small desktop */&#10;    @media (min-width: 769px) and (max-width: 1199px) {&#10;        .background-container {&#10;            justify-content: center;&#10;            padding: 20px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 1200px) {&#10;        .background-container {&#10;            justify-content: center;&#10;        }&#10;    }&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    let username = '';&#10;    let password = '';&#10;    let loginFailed = false;&#10;&#10;    function handleLogin() {&#10;        console.log('Login:', username);&#10;&#10;        loginFailed = false;&#10;        fetch(&quot;http://localhost:8000/api/v1/users/login&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Content-Type': 'application/json',&#10;            },&#10;            body: JSON.stringify({ username, password }),&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Login failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            if (data.access_token) {&#10;                console.log('Success:', data);&#10;                window.localStorage.setItem('token', JSON.stringify(data.access_token));&#10;                window.location.href = '/dashboard';&#10;            } else {&#10;                loginFailed = true;&#10;                console.error('Login failed:', data.detail);&#10;            }&#10;        }).catch((error) =&gt; {&#10;            loginFailed = true;&#10;            console.error(error);&#10;        })&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;background-container&quot;&gt;&#10;    &lt;div class=&quot;login-panel&quot;&gt;&#10;        &lt;div class=&quot;title&quot;&gt;&#10;            &lt;h1&gt;SPCloud&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;form onsubmit={handleLogin}&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;username&quot;&gt;Login&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;text&quot;&#10;                        id=&quot;username&quot;&#10;                        bind:value={username}&#10;                        placeholder=&quot;Wprowadź login&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;password&quot;&#10;                        bind:value={password}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;`&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-login&quot;&gt;Zaloguj się&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        {#if loginFailed}&#10;            &lt;div class=&quot;error&quot;&gt;Zły login lub hasło!&lt;/div&gt;&#10;        {/if}&#10;        &lt;div class=&quot;register-section&quot;&gt;&#10;            &lt;a href=&quot;/register&quot; class=&quot;btn-register&quot;&gt; Zarejestruj się &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    .background-container {&#10;        width: 100%;&#10;        min-height: 100dvh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        margin: 0;&#10;        padding: 0;&#10;        overflow-x: hidden;&#10;        position: relative;&#10;    }&#10;&#10;    .login-panel {&#10;        width: 100%;&#10;        max-width: 400px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        padding: 40px;&#10;        animation: slideIn 0.5s ease-out;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    @keyframes slideIn {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(-50px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;&#10;    .title {&#10;        text-align: center;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .title h1 {&#10;        color: #fff;&#10;        font-size: 28px;&#10;        font-weight: 600;&#10;        margin: 0;&#10;    }&#10;&#10;    .form-group {&#10;        margin-bottom: 20px;&#10;    }&#10;&#10;    .form-group label {&#10;        display: block;&#10;        color: var(--text-secondary);&#10;        font-size: 14px;&#10;        font-weight: 500;&#10;        margin-bottom: 8px;&#10;    }&#10;&#10;    .form-group input {&#10;        width: 100%;&#10;        padding: 12px 15px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), serif;&#10;        color: var(--text-primary);&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .form-group input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .btn-login {&#10;        width: 100%;&#10;        padding: 14px;&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        border: none;&#10;        border-radius: 10px;&#10;        font-size: 16px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;        margin-top: 10px;&#10;    }&#10;&#10;    .btn-login:hover {&#10;        transform: translateY(-2px);&#10;        box-shadow: 0 5px 20px rgba(157, 115, 255, 0.4);&#10;    }&#10;&#10;    .btn-login:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .register-section {&#10;        margin-top: 30px;&#10;        padding-top: 20px;&#10;        border-top: 1px solid var(--border-color);&#10;        text-align: center;&#10;    }&#10;&#10;    .btn-register {&#10;        text-decoration: none;&#10;        background: transparent;&#10;        color: var(--primary-purple);&#10;        border: 2px solid var(--primary-purple);&#10;        padding: 12px 30px;&#10;        border-radius: 10px;&#10;        font-size: 15px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .btn-register:hover {&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        transform: translateY(-2px);&#10;    }&#10;&#10;    .btn-register:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .error {&#10;        color: red;&#10;        text-align: center;&#10;        padding: 2px;&#10;    }&#10;&#10;    /* Phone */&#10;    @media (max-width: 768px) {&#10;        .background-container {&#10;            padding: 15px;&#10;            justify-content: center;&#10;            align-items: center;&#10;            min-height: 100dvh;&#10;            background-attachment: scroll;&#10;            background-size: cover;&#10;            background-position: center center;&#10;        }&#10;&#10;        .login-panel {&#10;            max-width: 100%;&#10;            width: 100%;&#10;            padding: 25px 18px;&#10;            max-height: none;&#10;            border-radius: 12px;&#10;            margin: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 24px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 16px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 13px;&#10;            margin-bottom: 6px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 12px 14px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 13px;&#10;            font-size: 15px;&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 20px;&#10;            padding-top: 16px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 11px 25px;&#10;            font-size: 14px;&#10;            display: inline-block;&#10;        }&#10;    }&#10;&#10;    /* Small phones */&#10;    @media (max-width: 480px) {&#10;        .background-container {&#10;            padding: 10px;&#10;            min-height: 100svh;&#10;        }&#10;&#10;        .login-panel {&#10;            padding: 22px 16px;&#10;            border-radius: 10px;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 22px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 22px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 14px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 12px;&#10;            margin-bottom: 5px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 11px 12px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 12px;&#10;            font-size: 15px;&#10;            margin-top: 6px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 18px;&#10;            padding-top: 14px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 10px 20px;&#10;            font-size: 14px;&#10;        }&#10;&#10;        .error {&#10;            font-size: 13px;&#10;            padding: 4px;&#10;            margin-top: 10px;&#10;        }&#10;    }&#10;&#10;    /* Very small phones */&#10;    @media (max-width: 360px) {&#10;        .background-container {&#10;            padding: 8px;&#10;            min-height: 100svh;&#10;        }&#10;&#10;        .login-panel {&#10;            padding: 20px 14px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 20px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 10px 11px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 11px;&#10;            font-size: 14px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 9px 18px;&#10;            font-size: 13px;&#10;        }&#10;    }&#10;&#10;    /* Tablet and small desktop */&#10;    @media (min-width: 769px) and (max-width: 1199px) {&#10;        .background-container {&#10;            justify-content: center;&#10;            padding: 20px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 1200px) {&#10;        .background-container {&#10;            justify-content: center;&#10;        }&#10;    }&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/routes/register/+page.svelte">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/routes/register/+page.svelte" />
              <option name="originalContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    let username = '';&#10;    let password = '';&#10;    let repeatPassword = '';&#10;&#10;    let registerFailedUsernameTaken = false;&#10;    let registerFailedUsernameIsEmpty = false;&#10;&#10;    let registerFailedPasswordsNotSame = false;&#10;    let registerFailedPasswordIsEmpty = false;&#10;    let registerFailedPasswordTooShort = false;&#10;&#10;    /**&#10;     * Handles the login process when the &quot;Login&quot; button is clicked.&#10;     */&#10;    function handleRegister() {&#10;&#10;        const MIN_PASSWORD_LENGTH = 2;&#10;&#10;        registerFailedUsernameTaken = false;&#10;        registerFailedUsernameIsEmpty = false;&#10;        registerFailedPasswordsNotSame = false;&#10;        registerFailedPasswordIsEmpty = false;&#10;        registerFailedPasswordTooShort = false;&#10;&#10;        if (username.length === 0) {&#10;            registerFailedUsernameIsEmpty = true;&#10;            console.error('Username is empty');&#10;            return;&#10;        }&#10;&#10;        if (password.length === 0) {&#10;            registerFailedPasswordIsEmpty = true;&#10;            console.error('Password is empty');&#10;            return;&#10;        }&#10;&#10;        if (password !== repeatPassword) {&#10;            registerFailedPasswordsNotSame = true;&#10;            console.error('Passwords do not match');&#10;            return;&#10;        }&#10;&#10;        if (password.length &lt; MIN_PASSWORD_LENGTH) {&#10;            registerFailedPasswordTooShort = true;&#10;            console.error('Password is too short');&#10;            return;&#10;        }&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/users/register&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Content-Type': 'application/json',&#10;            },&#10;            body: JSON.stringify({ username, password }),&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Registration failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            if (data.access_token) {&#10;                console.log('Success:', data);&#10;                window.localStorage.setItem('token', JSON.stringify(data.access_token));&#10;                window.location.href = '/dashboard';&#10;            } else {&#10;                registerFailedUsernameTaken = true;&#10;                console.error('Registration failed:', data.detail);&#10;            }&#10;        }).catch((error) =&gt; {&#10;            registerFailedUsernameTaken = true;&#10;            console.error(error);&#10;        })&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;register-container&quot;&gt;&#10;    &lt;div class=&quot;login-panel&quot;&gt;&#10;        &lt;div class=&quot;title&quot;&gt;&#10;            &lt;h1&gt;SPCloud&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;form onsubmit={handleRegister}&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;username&quot;&gt;Login&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;text&quot;&#10;                        id=&quot;username&quot;&#10;                        bind:value={username}&#10;                        placeholder=&quot;Wprowadź login&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;password&quot;&#10;                        bind:value={password}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;repeat-password&quot;&gt;Powtórz hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;repeat-password&quot;&#10;                        bind:value={repeatPassword}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-login&quot;&gt;Zarejestruj się&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        {#if registerFailedUsernameTaken}&#10;            &lt;div class=&quot;error&quot;&gt;Ten login jest już użyty!&lt;/div&gt;&#10;        {:else if registerFailedUsernameIsEmpty}&#10;            &lt;div class=&quot;error&quot;&gt;Login nie może być pusty!&lt;/div&gt;&#10;        {:else if registerFailedPasswordIsEmpty}&#10;            &lt;div class=&quot;error&quot;&gt;Hasło nie może być puste!&lt;/div&gt;&#10;        {:else if registerFailedPasswordsNotSame}&#10;            &lt;div class=&quot;error&quot;&gt;Hasła nie są takie same!&lt;/div&gt;&#10;        {:else if registerFailedPasswordTooShort}&#10;            &lt;div class=&quot;error&quot;&gt;Hasło jest za krótkie!&lt;/div&gt;&#10;        {/if}&#10;&#10;        &lt;div class=&quot;register-section&quot;&gt;&#10;            &lt;a href=&quot;/login&quot; class=&quot;btn-register&quot;&gt; Zaloguj się &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    .register-container {&#10;        width: 100%;&#10;        min-height: 100dvh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        margin: 0;&#10;        padding: 0;&#10;        overflow-x: hidden;&#10;        position: relative;&#10;    }&#10;&#10;    .login-panel {&#10;        width: 100%;&#10;        max-width: 400px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        padding: 40px;&#10;        animation: slideIn 0.5s ease-out;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    @keyframes slideIn {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(-50px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;&#10;    .title {&#10;        text-align: center;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .title h1 {&#10;        color: #fff;&#10;        font-size: 28px;&#10;        font-weight: 600;&#10;        margin: 0;&#10;    }&#10;&#10;    .form-group {&#10;        margin-bottom: 20px;&#10;    }&#10;&#10;    .form-group label {&#10;        display: block;&#10;        color: var(--text-secondary);&#10;        font-size: 14px;&#10;        font-weight: 500;&#10;        margin-bottom: 8px;&#10;    }&#10;&#10;    .form-group input {&#10;        width: 100%;&#10;        padding: 12px 15px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), serif;&#10;        color: var(--text-primary);&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .form-group input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .btn-login {&#10;        width: 100%;&#10;        padding: 14px;&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        border: none;&#10;        border-radius: 10px;&#10;        font-size: 16px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;        margin-top: 10px;&#10;    }&#10;&#10;    .btn-login:hover {&#10;        transform: translateY(-2px);&#10;        box-shadow: 0 5px 20px rgba(157, 115, 255, 0.4);&#10;    }&#10;&#10;    .btn-login:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .register-section {&#10;        margin-top: 30px;&#10;        padding-top: 20px;&#10;        border-top: 1px solid var(--border-color);&#10;        text-align: center;&#10;    }&#10;&#10;    .btn-register {&#10;        text-decoration: none;&#10;        background: transparent;&#10;        color: var(--primary-purple);&#10;        border: 2px solid var(--primary-purple);&#10;        padding: 12px 30px;&#10;        border-radius: 10px;&#10;        font-size: 15px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .btn-register:hover {&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        transform: translateY(-2px);&#10;    }&#10;&#10;    .btn-register:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .error {&#10;        color: red;&#10;        text-align: center;&#10;        padding: 2px;&#10;    }&#10;&#10;    @media (max-width: 768px) {&#10;        .register-container {&#10;            padding: 15px;&#10;            justify-content: center;&#10;            align-items: center;&#10;            min-height: 100dvh;&#10;            background-attachment: scroll;&#10;            background-size: cover;&#10;            background-position: center center;&#10;        }&#10;&#10;        .login-panel {&#10;            max-width: 100%;&#10;            width: 100%;&#10;            padding: 25px 18px;&#10;            max-height: none;&#10;            border-radius: 12px;&#10;            margin: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 24px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 16px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 13px;&#10;            margin-bottom: 6px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 12px 14px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 13px;&#10;            font-size: 15px;&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 20px;&#10;            padding-top: 16px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 11px 25px;&#10;            font-size: 14px;&#10;            display: inline-block;&#10;        }&#10;&#10;        .error {&#10;            font-size: 14px;&#10;            margin-top: 12px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 769px) and (max-width: 1199px) {&#10;        .register-container {&#10;            justify-content: center;&#10;            padding: 20px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 1200px) {&#10;        .register-container {&#10;            justify-content: center;&#10;        }&#10;    }&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="&lt;script lang=&quot;ts&quot;&gt;&#10;    let username = '';&#10;    let password = '';&#10;    let repeatPassword = '';&#10;&#10;    let registerFailedUsernameTaken = false;&#10;    let registerFailedUsernameIsEmpty = false;&#10;&#10;    let registerFailedPasswordsNotSame = false;&#10;    let registerFailedPasswordIsEmpty = false;&#10;    let registerFailedPasswordTooShort = false;&#10;&#10;    /**&#10;     * Handles the login process when the &quot;Login&quot; button is clicked.&#10;     */&#10;    function handleRegister() {&#10;&#10;        const MIN_PASSWORD_LENGTH = 2;&#10;&#10;        registerFailedUsernameTaken = false;&#10;        registerFailedUsernameIsEmpty = false;&#10;        registerFailedPasswordsNotSame = false;&#10;        registerFailedPasswordIsEmpty = false;&#10;        registerFailedPasswordTooShort = false;&#10;&#10;        if (username.length === 0) {&#10;            registerFailedUsernameIsEmpty = true;&#10;            console.error('Username is empty');&#10;            return;&#10;        }&#10;&#10;        if (password.length === 0) {&#10;            registerFailedPasswordIsEmpty = true;&#10;            console.error('Password is empty');&#10;            return;&#10;        }&#10;&#10;        if (password !== repeatPassword) {&#10;            registerFailedPasswordsNotSame = true;&#10;            console.error('Passwords do not match');&#10;            return;&#10;        }&#10;&#10;        if (password.length &lt; MIN_PASSWORD_LENGTH) {&#10;            registerFailedPasswordTooShort = true;&#10;            console.error('Password is too short');&#10;            return;&#10;        }&#10;&#10;        fetch(&quot;http://localhost:8000/api/v1/users/register&quot;, {&#10;            method: 'POST',&#10;            headers: {&#10;                'Content-Type': 'application/json',&#10;            },&#10;            body: JSON.stringify({ username, password }),&#10;        }).then((response) =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error('Registration failed');&#10;            }&#10;            return response.json();&#10;        }).then((data) =&gt; {&#10;            if (data.access_token) {&#10;                console.log('Success:', data);&#10;                window.localStorage.setItem('token', JSON.stringify(data.access_token));&#10;                window.location.href = '/dashboard';&#10;            } else {&#10;                registerFailedUsernameTaken = true;&#10;                console.error('Registration failed:', data.detail);&#10;            }&#10;        }).catch((error) =&gt; {&#10;            registerFailedUsernameTaken = true;&#10;            console.error(error);&#10;        })&#10;    }&#10;&lt;/script&gt;&#10;&#10;&lt;div class=&quot;register-container&quot;&gt;&#10;    &lt;div class=&quot;login-panel&quot;&gt;&#10;        &lt;div class=&quot;title&quot;&gt;&#10;            &lt;h1&gt;SPCloud&lt;/h1&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;form onsubmit={handleRegister}&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;username&quot;&gt;Login&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;text&quot;&#10;                        id=&quot;username&quot;&#10;                        bind:value={username}&#10;                        placeholder=&quot;Wprowadź login&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;password&quot;&#10;                        bind:value={password}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;repeat-password&quot;&gt;Powtórz hasło&lt;/label&gt;&#10;                &lt;input&#10;                        type=&quot;password&quot;&#10;                        id=&quot;repeat-password&quot;&#10;                        bind:value={repeatPassword}&#10;                        placeholder=&quot;Wprowadź hasło&quot;&#10;                        required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;btn-login&quot;&gt;Zarejestruj się&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        {#if registerFailedUsernameTaken}&#10;            &lt;div class=&quot;error&quot;&gt;Ten login jest już użyty!&lt;/div&gt;&#10;        {:else if registerFailedUsernameIsEmpty}&#10;            &lt;div class=&quot;error&quot;&gt;Login nie może być pusty!&lt;/div&gt;&#10;        {:else if registerFailedPasswordIsEmpty}&#10;            &lt;div class=&quot;error&quot;&gt;Hasło nie może być puste!&lt;/div&gt;&#10;        {:else if registerFailedPasswordsNotSame}&#10;            &lt;div class=&quot;error&quot;&gt;Hasła nie są takie same!&lt;/div&gt;&#10;        {:else if registerFailedPasswordTooShort}&#10;            &lt;div class=&quot;error&quot;&gt;Hasło jest za krótkie!&lt;/div&gt;&#10;        {/if}&#10;&#10;        &lt;div class=&quot;register-section&quot;&gt;&#10;            &lt;a href=&quot;/login&quot; class=&quot;btn-register&quot;&gt; Zaloguj się &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;    .register-container {&#10;        width: 100%;&#10;        min-height: 100dvh;&#10;        display: flex;&#10;        justify-content: center;&#10;        align-items: center;&#10;        margin: 0;&#10;        padding: 0;&#10;        overflow-x: hidden;&#10;        position: relative;&#10;    }&#10;&#10;    .login-panel {&#10;        width: 100%;&#10;        max-width: 400px;&#10;        background: var(--primary-bg);&#10;        backdrop-filter: blur(16px);&#10;        -webkit-backdrop-filter: blur(16px);&#10;        border-radius: 16px;&#10;        border: 1px solid var(--border-color);&#10;        box-shadow: 0 8px 32px 0 rgba(14, 11, 32, 0.37);&#10;        padding: 40px;&#10;        animation: slideIn 0.5s ease-out;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    @keyframes slideIn {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(-50px);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;&#10;    .title {&#10;        text-align: center;&#10;        margin-bottom: 40px;&#10;    }&#10;&#10;    .title h1 {&#10;        color: #fff;&#10;        font-size: 28px;&#10;        font-weight: 600;&#10;        margin: 0;&#10;    }&#10;&#10;    .form-group {&#10;        margin-bottom: 20px;&#10;    }&#10;&#10;    .form-group label {&#10;        display: block;&#10;        color: var(--text-secondary);&#10;        font-size: 14px;&#10;        font-weight: 500;&#10;        margin-bottom: 8px;&#10;    }&#10;&#10;    .form-group input {&#10;        width: 100%;&#10;        padding: 12px 15px;&#10;        background-color: rgba(0, 0, 0, 0.2);&#10;        border: 1px solid var(--border-color);&#10;        border-radius: 8px;&#10;        font-size: 1rem;&#10;        font-family: var(--font-family), serif;&#10;        color: var(--text-primary);&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    .form-group input:focus {&#10;        outline: none;&#10;        border-color: var(--primary-purple);&#10;        box-shadow: 0 0 0 3px rgba(157, 115, 255, 0.3);&#10;    }&#10;&#10;    .btn-login {&#10;        width: 100%;&#10;        padding: 14px;&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        border: none;&#10;        border-radius: 10px;&#10;        font-size: 16px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;        margin-top: 10px;&#10;    }&#10;&#10;    .btn-login:hover {&#10;        transform: translateY(-2px);&#10;        box-shadow: 0 5px 20px rgba(157, 115, 255, 0.4);&#10;    }&#10;&#10;    .btn-login:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .register-section {&#10;        margin-top: 30px;&#10;        padding-top: 20px;&#10;        border-top: 1px solid var(--border-color);&#10;        text-align: center;&#10;    }&#10;&#10;    .btn-register {&#10;        text-decoration: none;&#10;        background: transparent;&#10;        color: var(--primary-purple);&#10;        border: 2px solid var(--primary-purple);&#10;        padding: 12px 30px;&#10;        border-radius: 10px;&#10;        font-size: 15px;&#10;        font-weight: 600;&#10;        cursor: pointer;&#10;        transition: all 0.3s ease;&#10;    }&#10;&#10;    .btn-register:hover {&#10;        background: var(--primary-purple);&#10;        color: white;&#10;        transform: translateY(-2px);&#10;    }&#10;&#10;    .btn-register:active {&#10;        transform: translateY(0);&#10;    }&#10;&#10;    .error {&#10;        color: red;&#10;        text-align: center;&#10;        padding: 2px;&#10;    }&#10;&#10;    @media (max-width: 768px) {&#10;        .register-container {&#10;            padding: 15px;&#10;            justify-content: center;&#10;            align-items: center;&#10;            min-height: 100dvh;&#10;            background-attachment: scroll;&#10;            background-size: cover;&#10;            background-position: center center;&#10;        }&#10;&#10;        .login-panel {&#10;            max-width: 100%;&#10;            width: 100%;&#10;            padding: 25px 18px;&#10;            max-height: none;&#10;            border-radius: 12px;&#10;            margin: 0;&#10;            box-sizing: border-box;&#10;        }&#10;&#10;        .title {&#10;            margin-bottom: 25px;&#10;        }&#10;&#10;        .title h1 {&#10;            font-size: 24px;&#10;        }&#10;&#10;        .form-group {&#10;            margin-bottom: 16px;&#10;        }&#10;&#10;        .form-group label {&#10;            font-size: 13px;&#10;            margin-bottom: 6px;&#10;        }&#10;&#10;        .form-group input {&#10;            padding: 12px 14px;&#10;            font-size: 16px;&#10;        }&#10;&#10;        .btn-login {&#10;            padding: 13px;&#10;            font-size: 15px;&#10;            margin-top: 8px;&#10;        }&#10;&#10;        .register-section {&#10;            margin-top: 20px;&#10;            padding-top: 16px;&#10;        }&#10;&#10;        .btn-register {&#10;            padding: 11px 25px;&#10;            font-size: 14px;&#10;            display: inline-block;&#10;        }&#10;&#10;        .error {&#10;            font-size: 14px;&#10;            margin-top: 12px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 769px) and (max-width: 1199px) {&#10;        .register-container {&#10;            justify-content: center;&#10;            padding: 20px;&#10;        }&#10;    }&#10;&#10;    @media (min-width: 1200px) {&#10;        .register-container {&#10;            justify-content: center;&#10;        }&#10;    }&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>